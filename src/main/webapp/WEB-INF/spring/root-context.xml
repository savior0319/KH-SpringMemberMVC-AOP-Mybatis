<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- Data Source Bean 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="SPRING" />
		<property name="password" value="SPRING" />
		<property name="defaultAutoCommit" value="false"></property>
	</bean>
	<!-- Data Source Bean 설정 끝 -->

	<!-- Mybatis 추가 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:/mapper/**/*SQL.xml"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSession"></constructor-arg>
	</bean>
	<!-- Mybatis 추가 끝 -->


	<!-- Transaction 설정 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="select" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 기존 AOP 관련 설정은 개발자가 직접 해주지만 트랜잭션 처리는 스프링 컨테이너가 tx:advice 정보를 참조하여 자동으로 
		객체를 생성하고 실행함 <tx:method name="select" read-only="true" /> 값은 읽기 전용 메소드명을 
		명시하는것임 (읽기 전용은 트랜잭션 처리가 필요 없는 메소드를 말함 ex_로그인) -->

	<aop:config>
		<aop:pointcut id="tranPointcut"
			expression="execution(* org.kh.member.model.service.MemberServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="tranPointcut" />
	</aop:config>
	<!-- Transaction 설정 끝 -->

</beans>